name: Android CI/CD Pipeline

on:
    push:
        branches: [main, develop]
    pull_request:
        branches: [main, develop]

jobs:
    test:
        name: Unit Tests
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up JDK 21
              uses: actions/setup-java@v4
              with:
                  java-version: "21"
                  distribution: "temurin"

            - name: Setup Android SDK
              uses: android-actions/setup-android@v3

            - name: Cache Gradle packages
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.gradle/caches
                      ~/.gradle/wrapper
                  key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
                  restore-keys: |
                      ${{ runner.os }}-gradle-

            - name: Set up google-services.json
              shell: bash
              run: |
                  mkdir -p app
                  echo "$GOOGLE_SERVICES_JSON_BASE64" | base64 --decode > app/google-services.json

            - name: Print google-services.json
              run: |
                  echo "─── google-services.json ───"
                  cat app/google-services.json

            - name: Grant execute permission for gradlew
              run: chmod +x gradlew

            - name: Run unit tests
              run: ./gradlew testDebugUnitTest

            - name: Generate test report
              uses: dorny/test-reporter@v1
              if: success() || failure()
              with:
                  name: Unit Test Results
                  path: "**/test-results/**/*.xml"
                  reporter: java-junit
                  fail-on-error: true

            - name: Generate coverage report
              run: ./gradlew jacocoTestReport

            - name: Upload coverage to Codecov
              uses: codecov/codecov-action@v4
              with:
                  file: ./app/build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml
                  flags: unittests
                  name: codecov-umbrella

            - name: Comment coverage on PR
              if: github.event_name == 'pull_request'
              uses: madrapps/jacoco-report@v1.6.1
              with:
                  paths: |
                      ${{ github.workspace }}/app/build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml
                  token: ${{ secrets.GITHUB_TOKEN }}
                  min-coverage-overall: 80
                  min-coverage-changed-files: 80
                  title: "Code Coverage Report"
                  update-comment: true

    build:
        name: Build APK
        runs-on: ubuntu-latest
        needs: test

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up JDK 21
              uses: actions/setup-java@v4
              with:
                  java-version: "21"
                  distribution: "temurin"

            - name: Setup Android SDK
              uses: android-actions/setup-android@v3

            - name: Cache Gradle packages
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.gradle/caches
                      ~/.gradle/wrapper
                  key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
                  restore-keys: |
                      ${{ runner.os }}-gradle-

            - name: Grant execute permission for gradlew
              run: chmod +x gradlew

            - name: Build debug APK
              run: ./gradlew assembleDebug

            - name: Upload debug APK
              uses: actions/upload-artifact@v4
              with:
                  name: debug-apk
                  path: app/build/outputs/apk/debug/app-debug.apk

    security-scan:
        name: Security Scan
        runs-on: ubuntu-latest
        needs: test

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Run Trivy vulnerability scanner
              uses: aquasecurity/trivy-action@master
              with:
                  scan-type: "fs"
                  scan-ref: "."
                  format: "sarif"
                  output: "trivy-results.sarif"

            - name: Upload Trivy scan results to GitHub Security tab
              uses: github/codeql-action/upload-sarif@v3
              if: always()
              with:
                  sarif_file: "trivy-results.sarif"
